// <auto-generated>
// This code is generated by csbindgen.
// DON'T CHANGE THIS DIRECTLY.
// </auto-generated>
#pragma warning disable CS8500
#pragma warning disable CS8981
using System;
using System.Runtime.InteropServices;

namespace VoicevoxEngineSharp.Core.Native
{
    internal static unsafe partial class CoreUnsafe
    {
#if UNITY_IOS && !UNITY_EDITOR
        const string __DllName = "__Internal";
#else
        const string __DllName = "voicevox_core";
#endif
        

        [DllImport(__DllName, EntryPoint = "voicevox_open_jtalk_rc_new", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern VoicevoxResultCode voicevox_open_jtalk_rc_new(byte* open_jtalk_dic_dir, OpenJtalkRc** out_open_jtalk);

        [DllImport(__DllName, EntryPoint = "voicevox_open_jtalk_rc_use_user_dict", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern VoicevoxResultCode voicevox_open_jtalk_rc_use_user_dict(OpenJtalkRc* open_jtalk, VoicevoxUserDict* user_dict);

        [DllImport(__DllName, EntryPoint = "voicevox_open_jtalk_rc_delete", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void voicevox_open_jtalk_rc_delete(OpenJtalkRc* open_jtalk);

        [DllImport(__DllName, EntryPoint = "voicevox_make_default_initialize_options", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern VoicevoxInitializeOptions voicevox_make_default_initialize_options();

        [DllImport(__DllName, EntryPoint = "voicevox_get_version", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern byte* voicevox_get_version();

        [DllImport(__DllName, EntryPoint = "voicevox_voice_model_new_from_path", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern VoicevoxResultCode voicevox_voice_model_new_from_path(byte* path, VoicevoxVoiceModel** out_model);

        [DllImport(__DllName, EntryPoint = "voicevox_voice_model_id", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern byte* voicevox_voice_model_id(VoicevoxVoiceModel* model);

        [DllImport(__DllName, EntryPoint = "voicevox_voice_model_get_metas_json", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern byte* voicevox_voice_model_get_metas_json(VoicevoxVoiceModel* model);

        [DllImport(__DllName, EntryPoint = "voicevox_voice_model_delete", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void voicevox_voice_model_delete(VoicevoxVoiceModel* model);

        [DllImport(__DllName, EntryPoint = "voicevox_synthesizer_new_with_initialize", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern VoicevoxResultCode voicevox_synthesizer_new_with_initialize(OpenJtalkRc* open_jtalk, VoicevoxInitializeOptions options, VoicevoxSynthesizer** out_synthesizer);

        [DllImport(__DllName, EntryPoint = "voicevox_synthesizer_delete", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void voicevox_synthesizer_delete(VoicevoxSynthesizer* synthesizer);

        [DllImport(__DllName, EntryPoint = "voicevox_synthesizer_load_voice_model", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern VoicevoxResultCode voicevox_synthesizer_load_voice_model(VoicevoxSynthesizer* synthesizer, VoicevoxVoiceModel* model);

        [DllImport(__DllName, EntryPoint = "voicevox_synthesizer_unload_voice_model", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern VoicevoxResultCode voicevox_synthesizer_unload_voice_model(VoicevoxSynthesizer* synthesizer, byte* model_id);

        [DllImport(__DllName, EntryPoint = "voicevox_synthesizer_is_gpu_mode", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.U1)]
        public static extern bool voicevox_synthesizer_is_gpu_mode(VoicevoxSynthesizer* synthesizer);

        [DllImport(__DllName, EntryPoint = "voicevox_synthesizer_is_loaded_voice_model", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        [return: MarshalAs(UnmanagedType.U1)]
        public static extern bool voicevox_synthesizer_is_loaded_voice_model(VoicevoxSynthesizer* synthesizer, byte* model_id);

        [DllImport(__DllName, EntryPoint = "voicevox_synthesizer_get_metas_json", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern byte* voicevox_synthesizer_get_metas_json(VoicevoxSynthesizer* synthesizer);

        [DllImport(__DllName, EntryPoint = "voicevox_create_supported_devices_json", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern VoicevoxResultCode voicevox_create_supported_devices_json(byte** output_supported_devices_json);

        [DllImport(__DllName, EntryPoint = "voicevox_make_default_audio_query_options", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern VoicevoxAudioQueryOptions voicevox_make_default_audio_query_options();

        [DllImport(__DllName, EntryPoint = "voicevox_synthesizer_create_audio_query", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern VoicevoxResultCode voicevox_synthesizer_create_audio_query(VoicevoxSynthesizer* synthesizer, byte* text, uint style_id, VoicevoxAudioQueryOptions options, byte** output_audio_query_json);

        [DllImport(__DllName, EntryPoint = "voicevox_make_default_accent_phrases_options", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern VoicevoxAccentPhrasesOptions voicevox_make_default_accent_phrases_options();

        [DllImport(__DllName, EntryPoint = "voicevox_synthesizer_create_accent_phrases", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern VoicevoxResultCode voicevox_synthesizer_create_accent_phrases(VoicevoxSynthesizer* synthesizer, byte* text, uint style_id, VoicevoxAccentPhrasesOptions options, byte** output_accent_phrases_json);

        [DllImport(__DllName, EntryPoint = "voicevox_synthesizer_replace_mora_data", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern VoicevoxResultCode voicevox_synthesizer_replace_mora_data(VoicevoxSynthesizer* synthesizer, byte* accent_phrases_json, uint style_id, byte** output_accent_phrases_json);

        [DllImport(__DllName, EntryPoint = "voicevox_synthesizer_replace_phoneme_length", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern VoicevoxResultCode voicevox_synthesizer_replace_phoneme_length(VoicevoxSynthesizer* synthesizer, byte* accent_phrases_json, uint style_id, byte** output_accent_phrases_json);

        [DllImport(__DllName, EntryPoint = "voicevox_synthesizer_replace_mora_pitch", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern VoicevoxResultCode voicevox_synthesizer_replace_mora_pitch(VoicevoxSynthesizer* synthesizer, byte* accent_phrases_json, uint style_id, byte** output_accent_phrases_json);

        [DllImport(__DllName, EntryPoint = "voicevox_make_default_synthesis_options", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern VoicevoxSynthesisOptions voicevox_make_default_synthesis_options();

        [DllImport(__DllName, EntryPoint = "voicevox_synthesizer_synthesis", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern VoicevoxResultCode voicevox_synthesizer_synthesis(VoicevoxSynthesizer* synthesizer, byte* audio_query_json, uint style_id, VoicevoxSynthesisOptions options, nuint* output_wav_length, byte** output_wav);

        [DllImport(__DllName, EntryPoint = "voicevox_make_default_tts_options", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern VoicevoxTtsOptions voicevox_make_default_tts_options();

        [DllImport(__DllName, EntryPoint = "voicevox_synthesizer_tts", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern VoicevoxResultCode voicevox_synthesizer_tts(VoicevoxSynthesizer* synthesizer, byte* text, uint style_id, VoicevoxTtsOptions options, nuint* output_wav_length, byte** output_wav);

        [DllImport(__DllName, EntryPoint = "voicevox_json_free", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void voicevox_json_free(byte* json);

        [DllImport(__DllName, EntryPoint = "voicevox_wav_free", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void voicevox_wav_free(byte* wav);

        [DllImport(__DllName, EntryPoint = "voicevox_error_result_to_message", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern byte* voicevox_error_result_to_message(VoicevoxResultCode result_code);

        [DllImport(__DllName, EntryPoint = "voicevox_user_dict_word_make", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern VoicevoxUserDictWord voicevox_user_dict_word_make(byte* surface, byte* pronunciation);

        [DllImport(__DllName, EntryPoint = "voicevox_user_dict_new", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern VoicevoxUserDict* voicevox_user_dict_new();

        [DllImport(__DllName, EntryPoint = "voicevox_user_dict_load", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern VoicevoxResultCode voicevox_user_dict_load(VoicevoxUserDict* user_dict, byte* dict_path);

        [DllImport(__DllName, EntryPoint = "voicevox_user_dict_to_json", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern VoicevoxResultCode voicevox_user_dict_to_json(VoicevoxUserDict* user_dict, byte** output_json);

        [DllImport(__DllName, EntryPoint = "voicevox_user_dict_import", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern VoicevoxResultCode voicevox_user_dict_import(VoicevoxUserDict* user_dict, VoicevoxUserDict* other_dict);

        [DllImport(__DllName, EntryPoint = "voicevox_user_dict_save", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern VoicevoxResultCode voicevox_user_dict_save(VoicevoxUserDict* user_dict, byte* path);

        [DllImport(__DllName, EntryPoint = "voicevox_user_dict_delete", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void voicevox_user_dict_delete(VoicevoxUserDict* user_dict);


    }

    [StructLayout(LayoutKind.Sequential)]
    internal unsafe partial struct OpenJtalkRc
    {
        public fixed byte _unused[1];
    }

    [StructLayout(LayoutKind.Sequential)]
    internal unsafe partial struct VoicevoxSynthesizer
    {
        public fixed byte _unused[1];
    }

    [StructLayout(LayoutKind.Sequential)]
    internal unsafe partial struct VoicevoxUserDict
    {
        public fixed byte _unused[1];
    }

    [StructLayout(LayoutKind.Sequential)]
    internal unsafe partial struct VoicevoxVoiceModel
    {
        public fixed byte _unused[1];
    }

    [StructLayout(LayoutKind.Sequential)]
    internal unsafe partial struct VoicevoxInitializeOptions
    {
        public VoicevoxAccelerationMode acceleration_mode;
        public ushort cpu_num_threads;
        [MarshalAs(UnmanagedType.U1)] public bool load_all_models;
    }

    [StructLayout(LayoutKind.Sequential)]
    internal unsafe partial struct VoicevoxAudioQueryOptions
    {
        [MarshalAs(UnmanagedType.U1)] public bool kana;
    }

    [StructLayout(LayoutKind.Sequential)]
    internal unsafe partial struct VoicevoxAccentPhrasesOptions
    {
        [MarshalAs(UnmanagedType.U1)] public bool kana;
    }

    [StructLayout(LayoutKind.Sequential)]
    internal unsafe partial struct VoicevoxSynthesisOptions
    {
        [MarshalAs(UnmanagedType.U1)] public bool enable_interrogative_upspeak;
    }

    [StructLayout(LayoutKind.Sequential)]
    internal unsafe partial struct VoicevoxTtsOptions
    {
        [MarshalAs(UnmanagedType.U1)] public bool kana;
        [MarshalAs(UnmanagedType.U1)] public bool enable_interrogative_upspeak;
    }

    [StructLayout(LayoutKind.Sequential)]
    internal unsafe partial struct VoicevoxUserDictWord
    {
        public byte* surface;
        public byte* pronunciation;
        public nuint accent_type;
        public VoicevoxUserDictWordType word_type;
        public uint priority;
    }


    internal enum VoicevoxAccelerationMode : int
    {
        VOICEVOX_ACCELERATION_MODE_AUTO = 0,
        VOICEVOX_ACCELERATION_MODE_CPU = 1,
        VOICEVOX_ACCELERATION_MODE_GPU = 2,
    }

    internal enum VoicevoxResultCode : int
    {
        VOICEVOX_RESULT_OK = 0,
        VOICEVOX_RESULT_NOT_LOADED_OPENJTALK_DICT_ERROR = 1,
        VOICEVOX_RESULT_LOAD_MODEL_ERROR = 2,
        VOICEVOX_RESULT_GET_SUPPORTED_DEVICES_ERROR = 3,
        VOICEVOX_RESULT_GPU_SUPPORT_ERROR = 4,
        VOICEVOX_RESULT_LOAD_METAS_ERROR = 5,
        VOICEVOX_RESULT_INVALID_STYLE_ID_ERROR = 6,
        VOICEVOX_RESULT_INVALID_MODEL_ID_ERROR = 7,
        VOICEVOX_RESULT_INFERENCE_ERROR = 8,
        VOICEVOX_RESULT_EXTRACT_FULL_CONTEXT_LABEL_ERROR = 11,
        VOICEVOX_RESULT_INVALID_UTF8_INPUT_ERROR = 12,
        VOICEVOX_RESULT_PARSE_KANA_ERROR = 13,
        VOICEVOX_RESULT_INVALID_AUDIO_QUERY_ERROR = 14,
        VOICEVOX_RESULT_INVALID_ACCENT_PHRASE_ERROR = 15,
        VOICEVOX_RESULT_OPEN_FILE_ERROR = 16,
        VOICEVOX_RESULT_VVM_MODEL_READ_ERROR = 17,
        VOICEVOX_RESULT_ALREADY_LOADED_MODEL_ERROR = 18,
        VOICEVOX_RESULT_UNLOADED_MODEL_ERROR = 19,
        VOICEVOX_RESULT_LOAD_USER_DICT_ERROR = 20,
        VOICEVOX_RESULT_SAVE_USER_DICT_ERROR = 21,
        VOICEVOX_RESULT_UNKNOWN_USER_DICT_WORD_ERROR = 22,
        VOICEVOX_RESULT_USE_USER_DICT_ERROR = 23,
        VOICEVOX_RESULT_INVALID_USER_DICT_WORD_ERROR = 24,
        VOICEVOX_RESULT_INVALID_UUID_ERROR = 25,
    }

    internal enum VoicevoxUserDictWordType : int
    {
        VOICEVOX_USER_DICT_WORD_TYPE_PROPER_NOUN = 0,
        VOICEVOX_USER_DICT_WORD_TYPE_COMMON_NOUN = 1,
        VOICEVOX_USER_DICT_WORD_TYPE_VERB = 2,
        VOICEVOX_USER_DICT_WORD_TYPE_ADJECTIVE = 3,
        VOICEVOX_USER_DICT_WORD_TYPE_SUFFIX = 4,
    }


}
    